// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VipcoSafety.Models;

namespace VipcoSafety.Migrations
{
    [DbContext(typeof(SafetyContext))]
    [Migration("20181019035402_updateLiftWorkPermit3")]
    partial class updateLiftWorkPermit3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VipcoSafety.Models.ApprovedFlowDetail", b =>
                {
                    b.Property<int>("ApprovedFlowDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedFlowMasterId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("GroupMis")
                        .HasMaxLength(50);

                    b.Property<string>("GroupMisName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ApprovedFlowDetailId");

                    b.HasIndex("ApprovedFlowMasterId");

                    b.ToTable("ApprovedFlowDetails");
                });

            modelBuilder.Entity("VipcoSafety.Models.ApprovedFlowMaster", b =>
                {
                    b.Property<int>("ApprovedFlowMasterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmp")
                        .HasMaxLength(50);

                    b.Property<string>("ApprovedByMail")
                        .HasMaxLength(200);

                    b.Property<string>("ApprovedByNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ApprovedFlowMasterId");

                    b.ToTable("ApprovedFlowMasters");
                });

            modelBuilder.Entity("VipcoSafety.Models.CheckList", b =>
                {
                    b.Property<int>("CheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("NameEng")
                        .HasMaxLength(250);

                    b.Property<string>("NameThai")
                        .HasMaxLength(250);

                    b.Property<int>("Status");

                    b.HasKey("CheckListId");

                    b.ToTable("CheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.ChemicalHasCheckList", b =>
                {
                    b.Property<int>("ChemicalHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<int?>("ChemicalWorkPermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ChemicalHasCheckListId");

                    b.HasIndex("ChemicalWorkPermitId");

                    b.ToTable("ChemicalHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.ChemicalHasEquip", b =>
                {
                    b.Property<int>("ChemicalHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChemicalWorkPermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("ChemicalHasEquipId");

                    b.HasIndex("ChemicalWorkPermitId");

                    b.ToTable("ChemicalHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.ChemicalWorkPermit", b =>
                {
                    b.Property<int>("ChemicalWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("InsulationWork");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("PaintAndBlastWork");

                    b.Property<bool?>("PassivationWokr");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("ChemicalWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("ChemicalWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.ColdHasCheckList", b =>
                {
                    b.Property<int>("ColdHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<int?>("ColdWorkPermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ColdHasCheckListId");

                    b.HasIndex("ColdWorkPermitId");

                    b.ToTable("ColdHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.ColdHasEquip", b =>
                {
                    b.Property<int>("ColdHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColdWorkPermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("ColdHasEquipId");

                    b.HasIndex("ColdWorkPermitId");

                    b.ToTable("ColdHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.ColdWorkPermit", b =>
                {
                    b.Property<int>("ColdWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<bool?>("ConstructionWork");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("ColdWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("ColdWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasCheckList", b =>
                {
                    b.Property<int>("ConfinedHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<int?>("ConfinedSpacePermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ConfinedHasCheckListId");

                    b.HasIndex("ConfinedSpacePermitId");

                    b.ToTable("ConfinedHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasEmpHelp", b =>
                {
                    b.Property<int>("ConfinedHasEmpHelpId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfinedSpacePermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("EmpNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ConfinedHasEmpHelpId");

                    b.HasIndex("ConfinedSpacePermitId");

                    b.ToTable("ConfinedHasEmpHelps");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasEmpWork", b =>
                {
                    b.Property<int>("ConfinedHasEmpWorkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfinedSpacePermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("EmpNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ConfinedHasEmpWorkId");

                    b.HasIndex("ConfinedSpacePermitId");

                    b.ToTable("ConfinedHasEmpWorks");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasEquip", b =>
                {
                    b.Property<int>("ConfinedHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfinedSpacePermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("ConfinedHasEquipId");

                    b.HasIndex("ConfinedSpacePermitId");

                    b.ToTable("ConfinedHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasPrecaution", b =>
                {
                    b.Property<int>("ConfinedHasPreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfinedSpaceWorkPermitId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Measure")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(200);

                    b.Property<string>("Risk")
                        .HasMaxLength(200);

                    b.HasKey("ConfinedHasPreId");

                    b.HasIndex("ConfinedSpaceWorkPermitId");

                    b.ToTable("ConfinedHasPrecautions");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", b =>
                {
                    b.Property<int>("ConfinedSpaceWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("HasHotPermit");

                    b.Property<string>("HotPermitNo")
                        .HasMaxLength(50);

                    b.Property<bool?>("HotWorkCutting");

                    b.Property<bool?>("HotWorkGrinding");

                    b.Property<bool?>("HotWorkOther");

                    b.Property<string>("HotWorkOtherString")
                        .HasMaxLength(50);

                    b.Property<bool?>("HotWorkWelding");

                    b.Property<bool?>("InstallWork");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("RepairWork");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("ConfinedSpaceWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("ConfinedSpaceWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.ElectricalHasCheckList", b =>
                {
                    b.Property<int>("ElectricalHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("ElectricalPermitId");

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("ElectricalHasCheckListId");

                    b.HasIndex("ElectricalPermitId");

                    b.ToTable("ElectricalHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.ElectricalHasEquip", b =>
                {
                    b.Property<int>("ElectricalHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("ElectricalPermitId");

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("ElectricalHasEquipId");

                    b.HasIndex("ElectricalPermitId");

                    b.ToTable("ElectricalHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.ElectricalWorkPermit", b =>
                {
                    b.Property<int>("ElectricalPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("InstallWork");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("RepairWork");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int?>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("ElectricalPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("ElectricalWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.GroupPermitHasCheckList", b =>
                {
                    b.Property<int>("GroupHasCheckId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("OptionValue");

                    b.Property<int?>("SequenceNo");

                    b.HasKey("GroupHasCheckId");

                    b.HasIndex("CheckListId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("GroupPermitHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.GroupPermitHasEquipment", b =>
                {
                    b.Property<int>("GroupHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("OptionValue");

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<int?>("SequenceNo");

                    b.HasKey("GroupHasEquipId");

                    b.HasIndex("GroupWorkPermitId");

                    b.HasIndex("SafetyEquipmentId");

                    b.ToTable("GroupPermitHasEquipments");
                });

            modelBuilder.Entity("VipcoSafety.Models.GroupWorkPermit", b =>
                {
                    b.Property<int>("GroupWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<int>("Status");

                    b.HasKey("GroupWorkPermitId");

                    b.ToTable("GroupWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.HeightHasCheckList", b =>
                {
                    b.Property<int>("HeightHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("HeightWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("HeightHasCheckListId");

                    b.HasIndex("HeightWorkPermitId");

                    b.ToTable("HeightHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.HeightHasEquip", b =>
                {
                    b.Property<int>("HeightHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("HeightWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("HeightHasEquipId");

                    b.HasIndex("HeightWorkPermitId");

                    b.ToTable("HeightHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.HeightWorkPermit", b =>
                {
                    b.Property<int>("HeightWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("InstallWork");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("RepairWork");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("HeightWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("HeightWorkPermit");
                });

            modelBuilder.Entity("VipcoSafety.Models.HotHasCheckList", b =>
                {
                    b.Property<int>("HotHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("HotWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("HotHasCheckListId");

                    b.HasIndex("HotWorkPermitId");

                    b.ToTable("HotHasCheckList");
                });

            modelBuilder.Entity("VipcoSafety.Models.HotHasEquip", b =>
                {
                    b.Property<int>("HasHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("HotWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("HasHasEquipId");

                    b.HasIndex("HotWorkPermitId");

                    b.ToTable("HotHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.HotWorkPermit", b =>
                {
                    b.Property<int>("HotWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("HotWork");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("PostWeldWork");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("HotWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("HotWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.Lifting1WorkPermit", b =>
                {
                    b.Property<int>("Lifting1WorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<string>("ConnectName")
                        .HasMaxLength(150);

                    b.Property<string>("ControlCraneName")
                        .HasMaxLength(150);

                    b.Property<string>("ControlName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("EngineerName")
                        .HasMaxLength(150);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("IsSendMail");

                    b.Property<string>("JobNo")
                        .HasMaxLength(100);

                    b.Property<bool?>("LengthOverTwelveMeter");

                    b.Property<DateTime?>("LiftDate");

                    b.Property<string>("LiftDateTimeString")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LiftFinishDate");

                    b.Property<string>("LiftFinishDateTimeString")
                        .HasMaxLength(50);

                    b.Property<double?>("Line10GG");

                    b.Property<double?>("Line10Ton");

                    b.Property<string>("Line1Comment")
                        .HasMaxLength(200);

                    b.Property<double?>("Line1TotalWeight");

                    b.Property<int?>("Line2MobileCrancEa");

                    b.Property<double?>("Line2MobileCrancSize");

                    b.Property<int?>("Line2OverHeadCrancEa");

                    b.Property<double?>("Line2OverHeadCrancSize");

                    b.Property<double?>("Line3HeightWork");

                    b.Property<double?>("Line3LengthWork");

                    b.Property<double?>("Line3WidthWork");

                    b.Property<double?>("Line4SlingLength");

                    b.Property<double?>("Line4SlingSize");

                    b.Property<double?>("Line4SlingTotal");

                    b.Property<double?>("Line5ChainLength");

                    b.Property<double?>("Line5ChainSize");

                    b.Property<double?>("Line5ChainTotal");

                    b.Property<double?>("Line6BurlapSize");

                    b.Property<double?>("Line6BurlapTotal");

                    b.Property<double?>("Line6burlapLength");

                    b.Property<double?>("Line7ShacklesSize");

                    b.Property<double?>("Line7ShacklesTotal");

                    b.Property<string>("Line8LiftCarry");

                    b.Property<double?>("Line8LiftDegree");

                    b.Property<double?>("Line8TypeLiftTotal");

                    b.Property<double?>("Line9ChainHoistSize");

                    b.Property<double?>("Line9CummalongSize");

                    b.Property<double?>("Line9LiftingBeamLength");

                    b.Property<double?>("Line9LiftingBeamWeigth");

                    b.Property<string>("Location")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("Other")
                        .HasMaxLength(200);

                    b.Property<bool?>("OverTenTon");

                    b.Property<bool?>("Pass");

                    b.Property<string>("PassTime");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SignalName")
                        .HasMaxLength(150);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(150);

                    b.Property<bool?>("TwoCraneLift");

                    b.Property<bool?>("Verify");

                    b.Property<string>("VerifyFix");

                    b.Property<string>("VerifyTime");

                    b.Property<double>("WeightPerLift");

                    b.Property<bool?>("WidthOverThreeMeter");

                    b.Property<string>("WorkGroup")
                        .HasMaxLength(100);

                    b.HasKey("Lifting1WorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("Lifting1WorkPermit");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.LiftingHasCheckList", b =>
                {
                    b.Property<int>("LiftingHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("Lifting1WorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("LiftingHasCheckListId");

                    b.HasIndex("Lifting1WorkPermitId");

                    b.ToTable("LiftingHasCheckList");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.LiftingHasEquip", b =>
                {
                    b.Property<int>("LiftingHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("Lifting1WorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("LiftingHasEquipId");

                    b.HasIndex("Lifting1WorkPermitId");

                    b.ToTable("LiftingHasEquip");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.LiftingHasPercaution", b =>
                {
                    b.Property<int>("LiftingHasPerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<int?>("Lifting1WorkPermitId");

                    b.Property<string>("Measure")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(200);

                    b.Property<string>("Risk")
                        .HasMaxLength(200);

                    b.HasKey("LiftingHasPerId");

                    b.HasIndex("Lifting1WorkPermitId");

                    b.ToTable("LiftingHasPercaution");
                });

            modelBuilder.Entity("VipcoSafety.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("VipcoSafety.Models.MachineAtWorkPermit", b =>
                {
                    b.Property<int>("MachineAtWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<bool?>("BendingMachine");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("FormingNachine");

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("HydraulicMachine");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<string>("MachineNo")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("MachineAtWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("MachineAtWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.MachineHasCheckList", b =>
                {
                    b.Property<int>("MachineHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("MachineAtWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.HasKey("MachineHasCheckListId");

                    b.HasIndex("MachineAtWorkPermitId");

                    b.ToTable("MachineHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.MachineHasEquip", b =>
                {
                    b.Property<int>("MachineHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<int?>("MachineAtWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("MachineHasEquipId");

                    b.HasIndex("MachineAtWorkPermitId");

                    b.ToTable("MachineHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.Permission", b =>
                {
                    b.Property<int>("PremissionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int>("LevelPermission");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("PremissionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("VipcoSafety.Models.PressureHasCheckList", b =>
                {
                    b.Property<int>("PressureHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int>("PressureWorkPermitId");

                    b.HasKey("PressureHasCheckListId");

                    b.HasIndex("PressureWorkPermitId");

                    b.ToTable("PressureHasCheckList");
                });

            modelBuilder.Entity("VipcoSafety.Models.PressureHasEquip", b =>
                {
                    b.Property<int>("PressureHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int>("PressureWorkPermitId");

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("PressureHasEquipId");

                    b.HasIndex("PressureWorkPermitId");

                    b.ToTable("PressureHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.PressureWorkPermit", b =>
                {
                    b.Property<int>("PressureWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<bool?>("AriLeakWork");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("HydroWork");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<bool?>("NitrogenWork");

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.HasKey("PressureWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("PressureWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.RayHasCheckList", b =>
                {
                    b.Property<int>("RayHasCheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckListId");

                    b.Property<string>("CheckListNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("CheckListNameThai")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("RayWorkPermitId");

                    b.HasKey("RayHasCheckListId");

                    b.HasIndex("RayWorkPermitId");

                    b.ToTable("RayHasCheckLists");
                });

            modelBuilder.Entity("VipcoSafety.Models.RayHasEquip", b =>
                {
                    b.Property<int>("RayHasEquipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("HasCheck");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<int?>("RayWorkPermitId");

                    b.Property<int?>("SafetyEquipmentId");

                    b.Property<string>("SafetyEquipmentNameEng")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyEquipmentNameThai")
                        .HasMaxLength(200);

                    b.HasKey("RayHasEquipId");

                    b.HasIndex("RayWorkPermitId");

                    b.ToTable("RayHasEquips");
                });

            modelBuilder.Entity("VipcoSafety.Models.RayWorkPermit", b =>
                {
                    b.Property<int>("RayWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByEmpName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<bool?>("AreaClear");

                    b.Property<string>("ComplateBy")
                        .HasMaxLength(50);

                    b.Property<string>("ComplateByName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ComplateDate");

                    b.Property<string>("ComplateTimeString")
                        .HasMaxLength(10);

                    b.Property<string>("ControlBy")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<bool?>("GemmaRay");

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<bool?>("IsSendMail");

                    b.Property<bool?>("KeepOutClear");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("RayNo")
                        .HasMaxLength(200);

                    b.Property<string>("RayStrength")
                        .HasMaxLength(50);

                    b.Property<string>("RepayMail")
                        .HasMaxLength(200);

                    b.Property<string>("RequireByEmpCode")
                        .HasMaxLength(50);

                    b.Property<string>("RequireByEmpName")
                        .HasMaxLength(150);

                    b.Property<double>("SafetyLength");

                    b.Property<string>("SpecialTool")
                        .HasMaxLength(500);

                    b.Property<int>("StatusWorkPermit");

                    b.Property<string>("SubContractor")
                        .HasMaxLength(250);

                    b.Property<int?>("TotalWorker");

                    b.Property<bool?>("WorkComplate");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("WpEndDate");

                    b.Property<string>("WpEndTimeString")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("WpStartDate");

                    b.Property<string>("WpStartTimeString")
                        .HasMaxLength(10);

                    b.Property<bool?>("XRay");

                    b.HasKey("RayWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("RayWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.SafetyData.SafetyRepayMail", b =>
                {
                    b.Property<int>("SafetyRepayMailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("EmpCode");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("SafetyMail")
                        .HasMaxLength(200);

                    b.Property<string>("SafetyName")
                        .HasMaxLength(200);

                    b.HasKey("SafetyRepayMailId");

                    b.ToTable("SafetyRepayMail");
                });

            modelBuilder.Entity("VipcoSafety.Models.SafetyEquipment", b =>
                {
                    b.Property<int>("SafetyEquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("NameEng")
                        .HasMaxLength(150);

                    b.Property<string>("NameThai")
                        .HasMaxLength(150);

                    b.Property<int>("Status");

                    b.HasKey("SafetyEquipmentId");

                    b.ToTable("SafetyEquipments");
                });

            modelBuilder.Entity("VipcoSafety.Models.TypeWorkPermit", b =>
                {
                    b.Property<int>("TypeWorkPermitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Creator")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<int?>("GroupWorkPermitId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Modifyer")
                        .HasMaxLength(50);

                    b.Property<string>("NameEng")
                        .HasMaxLength(150);

                    b.Property<string>("NameThai")
                        .HasMaxLength(150);

                    b.Property<int>("SequenceNo");

                    b.Property<int>("Status");

                    b.Property<int>("StatusWorkPermit");

                    b.HasKey("TypeWorkPermitId");

                    b.HasIndex("GroupWorkPermitId");

                    b.ToTable("TypeWorkPermits");
                });

            modelBuilder.Entity("VipcoSafety.Models.ApprovedFlowDetail", b =>
                {
                    b.HasOne("VipcoSafety.Models.ApprovedFlowMaster", "ApprovedFlowMaster")
                        .WithMany("ApprovedFlowDetails")
                        .HasForeignKey("ApprovedFlowMasterId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ChemicalHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.ChemicalWorkPermit", "ChemicalWorkPermit")
                        .WithMany("ChemicalHasCheckLists")
                        .HasForeignKey("ChemicalWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ChemicalHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.ChemicalWorkPermit", "ChemicalWorkPermit")
                        .WithMany("ChemicalHasEquips")
                        .HasForeignKey("ChemicalWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ChemicalWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ColdHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.ColdWorkPermit", "ColdWorkPermit")
                        .WithMany("ColdHasCheckLists")
                        .HasForeignKey("ColdWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ColdHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.ColdWorkPermit", "ColdWorkPermit")
                        .WithMany("ColdHasEquips")
                        .HasForeignKey("ColdWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ColdWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", "ConfinedSpacePermit")
                        .WithMany("ConfinedHasCheckLists")
                        .HasForeignKey("ConfinedSpacePermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasEmpHelp", b =>
                {
                    b.HasOne("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", "ConfinedSpacePermit")
                        .WithMany("ConfinedHasEmpHelps")
                        .HasForeignKey("ConfinedSpacePermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasEmpWork", b =>
                {
                    b.HasOne("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", "ConfinedSpacePermit")
                        .WithMany("ConfinedHasEmpWorks")
                        .HasForeignKey("ConfinedSpacePermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", "ConfinedSpacePermit")
                        .WithMany("ConfinedHasEquips")
                        .HasForeignKey("ConfinedSpacePermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedHasPrecaution", b =>
                {
                    b.HasOne("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", "ConfinedSpaceWorkPermit")
                        .WithMany("ConfinedHasPrecautions")
                        .HasForeignKey("ConfinedSpaceWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ConfinedSpaceWorkPermits.ConfinedSpaceWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ElectricalHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.ElectricalWorkPermit", "ElectricalPermit")
                        .WithMany("ElectricalHasCheckLists")
                        .HasForeignKey("ElectricalPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ElectricalHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.ElectricalWorkPermit", "ElectricalPermit")
                        .WithMany("ElectricalHasEquips")
                        .HasForeignKey("ElectricalPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.ElectricalWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.GroupPermitHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId");

                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany("GroupPermitHasCheckList")
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.GroupPermitHasEquipment", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany("GroupPermitHasEquipments")
                        .HasForeignKey("GroupWorkPermitId");

                    b.HasOne("VipcoSafety.Models.SafetyEquipment", "SafetyEquipment")
                        .WithMany()
                        .HasForeignKey("SafetyEquipmentId");
                });

            modelBuilder.Entity("VipcoSafety.Models.HeightHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.HeightWorkPermit", "HeightWorkPermit")
                        .WithMany("HeightHasCheckLists")
                        .HasForeignKey("HeightWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.HeightHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.HeightWorkPermit", "HeightWorkPermit")
                        .WithMany("HeightHasEquips")
                        .HasForeignKey("HeightWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.HeightWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.HotHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.HotWorkPermit", "HotWorkPermit")
                        .WithMany("HotHasCheckLists")
                        .HasForeignKey("HotWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.HotHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.HotWorkPermit", "HotWorkPermit")
                        .WithMany("HotHasEquips")
                        .HasForeignKey("HotWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.HotWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.Lifting1WorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.LiftingHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.LiftingWorkPermits.Lifting1WorkPermit", "Lifting1WorkPermit")
                        .WithMany("LiftingHasCheckLists")
                        .HasForeignKey("Lifting1WorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.LiftingHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.LiftingWorkPermits.Lifting1WorkPermit", "Lifting1WorkPermit")
                        .WithMany("LiftingHasEquips")
                        .HasForeignKey("Lifting1WorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.LiftingWorkPermits.LiftingHasPercaution", b =>
                {
                    b.HasOne("VipcoSafety.Models.LiftingWorkPermits.Lifting1WorkPermit", "Lifting1WorkPermit")
                        .WithMany("LiftingHasPercautions")
                        .HasForeignKey("Lifting1WorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.MachineAtWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.MachineHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.MachineAtWorkPermit", "MachineAtWorkPermit")
                        .WithMany("MachineHasCheckLists")
                        .HasForeignKey("MachineAtWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.MachineHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.MachineAtWorkPermit", "MachineAtWorkPermit")
                        .WithMany("MachineHasEquips")
                        .HasForeignKey("MachineAtWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.PressureHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.PressureWorkPermit", "PressureWorkPermit")
                        .WithMany("PressureHasCheckLists")
                        .HasForeignKey("PressureWorkPermitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VipcoSafety.Models.PressureHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.PressureWorkPermit", "PressureWorkPermit")
                        .WithMany("PressureHasEquips")
                        .HasForeignKey("PressureWorkPermitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VipcoSafety.Models.PressureWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.RayHasCheckList", b =>
                {
                    b.HasOne("VipcoSafety.Models.RayWorkPermit", "RayWorkPermit")
                        .WithMany("RayHasCheckLists")
                        .HasForeignKey("RayWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.RayHasEquip", b =>
                {
                    b.HasOne("VipcoSafety.Models.RayWorkPermit", "RayWorkPermit")
                        .WithMany("RayHasEquips")
                        .HasForeignKey("RayWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.RayWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });

            modelBuilder.Entity("VipcoSafety.Models.TypeWorkPermit", b =>
                {
                    b.HasOne("VipcoSafety.Models.GroupWorkPermit", "GroupWorkPermit")
                        .WithMany()
                        .HasForeignKey("GroupWorkPermitId");
                });
#pragma warning restore 612, 618
        }
    }
}
